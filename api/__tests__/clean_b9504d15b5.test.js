// Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4


const { clean } = require('../gulpfile');
const mock = require('mock-fs');

jest.mock('del', () => jest.fn());
jest.mock('fancy-log', () => jest.fn());

const del = require('del');
const log = require('fancy-log');

describe('Test clean function in gulpfile', () => {
  beforeEach(() => {
    mock({
      '../prod-build': {
        'file1.txt': 'file1',
        'file2.txt': 'file2'
      }
    });
  });

  afterEach(mock.restore);

  test('should call log function with correct message', () => {
    clean();
    expect(log).toHaveBeenCalledWith('removing the old files in the directory');
  });

  test('should call del function with correct parameters', () => {
    clean();
    expect(del).toHaveBeenCalledWith('../prod-build/**', { force: true });
  });

  test('should return correct value from del function', () => {
    const delReturnValue = 'DEL_RETURN_VALUE';
    del.mockReturnValue(delReturnValue);

    const returnValue = clean();

    expect(returnValue).toBe(delReturnValue);
  });

  test('should not have any files in the directory after clean', () => {
    clean();
    expect(fs.readdirSync('../prod-build')).toHaveLength(0);
  });
});
