// Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4


const { copyNodeJSCodeTask } = require('../gulpfile.js');
const fs = require('fs');
const path = require('path');

describe('copyNodeJSCodeTask', () => {
  let spyLog;
  let spyWebpackStream;
  let spyDest;
  
  beforeAll(() => {
    spyLog = jest.spyOn(console, 'log').mockImplementation();
    spyWebpackStream = jest.spyOn(webpack_stream, 'default').mockImplementation();
    spyDest = jest.spyOn(dest, 'default').mockImplementation();
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  afterAll(() => {
    jest.restoreAllMocks();
  });

  test('it should log the correct message', () => {
    copyNodeJSCodeTask();
    expect(spyLog).toHaveBeenCalledWith('building and copying server code into the directory');
  });

  test('it should call webpack_stream with webpack_config', () => {
    copyNodeJSCodeTask();
    expect(spyWebpackStream).toHaveBeenCalledWith(webpack_config);
  });

  test('it should call dest with the correct path', () => {
    copyNodeJSCodeTask();
    expect(spyDest).toHaveBeenCalledWith(`${paths.prod_build}`);
  });

  test('it should throw an error if webpack_stream fails', () => {
    spyWebpackStream.mockImplementation(() => {
      throw new Error('webpack_stream failed');
    });

    expect(() => copyNodeJSCodeTask()).toThrow('webpack_stream failed');
  });
});
