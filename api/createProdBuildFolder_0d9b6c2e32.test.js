// Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4


const { createProdBuildFolder } = require('./gulpfile.js');
const fs = require('fs');
const path = require('path');

describe("createProdBuildFolder", () => {

  const mockMkdirSync = jest.spyOn(fs, 'mkdirSync');
  const mockExistsSync = jest.spyOn(fs, 'existsSync');

  beforeEach(() => {
    mockMkdirSync.mockClear();
    mockExistsSync.mockClear();
  });

  afterAll(() => {
    mockMkdirSync.mockRestore();
    mockExistsSync.mockRestore();
  });

  test("should create a new directory if it does not exist", () => {
    mockExistsSync.mockReturnValue(false);
    createProdBuildFolder();
    expect(mockExistsSync).toHaveBeenCalled();
    expect(mockMkdirSync).toHaveBeenCalled();
  });

  test("should not create a new directory if it already exists", () => {
    mockExistsSync.mockReturnValue(true);
    createProdBuildFolder();
    expect(mockExistsSync).toHaveBeenCalled();
    expect(mockMkdirSync).not.toHaveBeenCalled();
  });

  test("should return a promise that resolves to 'the value is ignored'", async () => {
    const result = await createProdBuildFolder();
    expect(result).toBe('the value is ignored');
  });
});
